<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dev-Log on Mario S.O</title><link>https://blog.mariodev.xyz/</link><description>Recent content in Dev-Log on Mario S.O</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 20 Apr 2023 08:51:40 -0400</lastBuildDate><atom:link href="https://blog.mariodev.xyz/index.xml" rel="self" type="application/rss+xml"/><item><title>Day13 - Huff, learning &amp; bonuses</title><link>https://blog.mariodev.xyz/day13/</link><pubDate>Thu, 20 Apr 2023 08:51:40 -0400</pubDate><guid>https://blog.mariodev.xyz/day13/</guid><description>Yooooo, first of all I want to thank anyone reading this, it keeps me motivated knowing that there is someone out there reading my posts so, thank you!
Shoutout to @0xMackenzieM who talked to me via DM giving me some feedback on my approach with this blog. If I ever get nearly half on the knowledge he has, don&amp;rsquo;t doubt a single second that I will pay it forward.
Now to the huff stuff.</description></item><item><title>Day12 - Weponizing Gas</title><link>https://blog.mariodev.xyz/day12/</link><pubDate>Wed, 19 Apr 2023 12:06:41 -0400</pubDate><guid>https://blog.mariodev.xyz/day12/</guid><description>Today, reading through some past reports on Solodit I found out about this interesting exploit that is known under the name of 1/64 rule.
The EVM limits the total gas forwarded on to 63/64ths of the total gasleft() (and silently reduces it to this value if we try to send more)
Example This is the report from Sherlock that I was reading.
I still don&amp;rsquo;t fully understand how this works though, but I&amp;rsquo;ll try to explain it as best as I can.</description></item><item><title>Day11 - Code is not law</title><link>https://blog.mariodev.xyz/day11/</link><pubDate>Tue, 18 Apr 2023 12:05:22 -0400</pubDate><guid>https://blog.mariodev.xyz/day11/</guid><description>Going back again with yet another challenge from EVM Through CTFs, but this time, I don&amp;rsquo;t have a solution yet, I&amp;rsquo;m still working on it.
Still, will share the point at which I&amp;rsquo;m at right now so in the future I can look back and see how stupid I was hehe.
The challenge Today&amp;rsquo;s challenge consists on getting CodeIsNotLaw tokens from a minter contract, but it is not as straight forward as calling the mint function.</description></item><item><title>Day10 - Same bytecode, different code</title><link>https://blog.mariodev.xyz/day10/</link><pubDate>Mon, 17 Apr 2023 11:13:25 -0400</pubDate><guid>https://blog.mariodev.xyz/day10/</guid><description>Continuing with the EVM Through CTFs challenges, today I was able to solve a pretty interesting challenge.
The challenge In this case the challenge consisted on winning a game agains a bot smart contract (khabib) at the game 0xships.
The thing is that the bot khabib is quite a good player and his code is pretty complex, so trying to build your own bot was completely out of the equation.</description></item><item><title>Day09 - Busy af...</title><link>https://blog.mariodev.xyz/day09/</link><pubDate>Sun, 16 Apr 2023 15:44:26 -0400</pubDate><guid>https://blog.mariodev.xyz/day09/</guid><description>Today I managed to finish the first challenge of EVM Through CTFs completely, I&amp;rsquo;m now going through a pretty tough one that seems like it is going to be quite a good learning moment, so be sure I&amp;rsquo;ll be posting about it.
Then I met a friend and we kept chatting until 21:30, I&amp;rsquo;m pretty tired now but I&amp;rsquo;ll try to get some sleep and then get back to work tomorrow.</description></item><item><title>Day08 - Going deeper into the EVM</title><link>https://blog.mariodev.xyz/day08/</link><pubDate>Sat, 15 Apr 2023 14:11:20 -0400</pubDate><guid>https://blog.mariodev.xyz/day08/</guid><description>As we were saying&amp;hellip; Today I went on and tried the EVM Through CTFs challenges and, oh god are they good.
Even though the first challenge is a bit of a warmup (especially if you read my previous post Day04 - Calldata &amp;amp; Foundry) it rapidly gets harder and harder, I&amp;rsquo;m actually stuck in the last part of challenge one, but I&amp;rsquo;ll get there.
Opcodes &amp;amp; Stack resources The first thing I did was to look at the EVM Opcodes and evm.</description></item><item><title>Day07 - One of those days</title><link>https://blog.mariodev.xyz/day07/</link><pubDate>Fri, 14 Apr 2023 09:17:33 -0400</pubDate><guid>https://blog.mariodev.xyz/day07/</guid><description>Can&amp;rsquo;t share much today, I had such a busy day today that I could only dedicate 1 hour to my learning journey.
Still, managed to discover a new site that perfectly fits my needs for now: EVM Through CTFs
I will go through the first challenge tomorrow and hopefully finish it by the end of the day so I can write about it in the next post.</description></item><item><title>Day06 - VIP_Bank</title><link>https://blog.mariodev.xyz/day06/</link><pubDate>Thu, 13 Apr 2023 12:09:20 -0400</pubDate><guid>https://blog.mariodev.xyz/day06/</guid><description>Recently I discovered on Twitter this challenges page from Quill Audits, and I decided to give it a try.
I started with the VIPBank challenge, which is a smart contract that allows you to deposit and withdraw funds from it. The challenge consists on locking the contract, aka DoS attack.
The contract pragma solidity 0.8.7; contract VIP_Bank{ address public manager; mapping(address =&amp;gt; uint) public balances; mapping(address =&amp;gt; bool) public VIP; uint public maxETH = 0.</description></item><item><title>Day05 - 3 attack vectors</title><link>https://blog.mariodev.xyz/day05/</link><pubDate>Wed, 12 Apr 2023 09:57:24 -0400</pubDate><guid>https://blog.mariodev.xyz/day05/</guid><description>Today I was lucky to get in time to an @opensensepw discord study session where @mis4nthr0pic was going through a couple of attack vectors in the Solidity-Security-Compendium
Signature Malleability This is quite a math heavy thing when you start looking into how it actually works and why, but for the context of an auditor it is enough to know a couple of things.
In Ethereum, the ecrecover function is used to verify signatures.</description></item><item><title>Day04 - Calldata &amp; Foundry</title><link>https://blog.mariodev.xyz/day04/</link><pubDate>Tue, 11 Apr 2023 10:53:41 -0400</pubDate><guid>https://blog.mariodev.xyz/day04/</guid><description>The other day, I stumbled upon a tweet from @DeGatchi promoting his latest blog post about Reversing the EVM: Raw Calldata and I thought it was so helpful that I decided to write a post about it, not only to share it with you (rando reading this) but also to have a reference for myself.
It includes a foundry CLI mini-masterclass (if that&amp;rsquo;s a thing).
Calldata 101 Super brief ELI5 explanation of calldata:</description></item><item><title>Day03 - Smart Contract Auditing Heuristics</title><link>https://blog.mariodev.xyz/day03/</link><pubDate>Mon, 10 Apr 2023 04:55:09 -0400</pubDate><guid>https://blog.mariodev.xyz/day03/</guid><description>I found this cool repo on Github that has a list of heuristics for auditing smart contracts. I thought it would be a good idea to go through the ones I found interesting.
Code asymmetries In many projects, there should be some symmetries for different functions.
For instance, a withdraw function should (usually) undo all the state changes of a deposit function and a delete function should undo all the state changes of the corresponding add function.</description></item><item><title>Day02 - People don't read standards</title><link>https://blog.mariodev.xyz/day02/</link><pubDate>Sun, 09 Apr 2023 05:49:23 -0400</pubDate><guid>https://blog.mariodev.xyz/day02/</guid><description>Today I went on and after doing some Ethernaut challenges, I decided to try and go through open challenges on Code4rena.
Prepared my environment, opened filter4rena, and started looking for some vulns.
First finding When starting to look at the contracts I quickly found this line of code that caught my attention:
ERC20(token).transfer(msg.sender, amount); Even though this was my first ever real audit, I have been reading a lot of blog posts and common vulnerabilities, so I knew that this line of code was considered a vulnerability because it doesn&amp;rsquo;t check the return value of the transfer function, and some tokens do not revert when the transfer fails but instead return false.</description></item><item><title>Day01 - The Journey Begins</title><link>https://blog.mariodev.xyz/day01/</link><pubDate>Sat, 08 Apr 2023 04:10:05 -0400</pubDate><guid>https://blog.mariodev.xyz/day01/</guid><description>Everything starts here Today will officially be my first day on my journey into becoming a full time smart contract auditor.
It is not my actual first day, maybe the 5th or 6th, but this first days served for a couple of things.
Trainning my algortihm The other day I saw the importance of sinknig yourself into the topic you are trying to learn. In this case, Twitter is the way I started to embed myself into the world of smart contract auditing, following a bunch of well-known auditors and people in the space.</description></item></channel></rss>