<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>algorithms on Mario S.O</title><link>https://blog.mariodev.xyz/tags/algorithms/</link><description>Recent content in algorithms on Mario S.O</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 30 Jul 2022 15:35:06 +0200</lastBuildDate><atom:link href="https://blog.mariodev.xyz/tags/algorithms/index.xml" rel="self" type="application/rss+xml"/><item><title>Tail recursion concept</title><link>https://blog.mariodev.xyz/tailrecursion/</link><pubDate>Sat, 30 Jul 2022 15:35:06 +0200</pubDate><guid>https://blog.mariodev.xyz/tailrecursion/</guid><description>Tail Recursion We call tail recursion to a function which has its last instruction being a recursive call. They are recursive functions that can be used without the fear of suffering a stack overflow.
Normal recursion ‚ùå
def factorial (n): if n == 1: return 1 return n * factorial(n-1) This is an example of a normal recursion, because the last operation is not the recursive call, even though it seems that it is the last thing you do is the recursive call, the very last thing this code does is the multiplication.</description></item></channel></rss>