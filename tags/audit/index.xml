<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>audit on Mario S.O</title><link>https://blog.mariodev.xyz/tags/audit/</link><description>Recent content in audit on Mario S.O</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 28 Apr 2023 15:55:50 -0400</lastBuildDate><atom:link href="https://blog.mariodev.xyz/tags/audit/index.xml" rel="self" type="application/rss+xml"/><item><title>Day21 - Thanks for reading</title><link>https://blog.mariodev.xyz/day21/</link><pubDate>Fri, 28 Apr 2023 15:55:50 -0400</pubDate><guid>https://blog.mariodev.xyz/day21/</guid><description>The end I&amp;rsquo;m happy on how this turned out, I shared a 20 day journey where I went from 0 auditing to getting an actual team, I know I said I would share about the projects we audited, but that won&amp;rsquo;t happen, I&amp;rsquo;m sorry, I have other plans for both the blog direction and also my personal career.
Auditing is fun, and more so doing it on a team of such cool people, but it requires a huge mental which I don&amp;rsquo;t have right now.</description></item><item><title>Day20 - Adversarial thinking</title><link>https://blog.mariodev.xyz/day20/</link><pubDate>Thu, 27 Apr 2023 14:49:25 -0400</pubDate><guid>https://blog.mariodev.xyz/day20/</guid><description>Today, the auditing team and I got started with the Code4rena audit for EigenLayer and even though it is not live yet (couple of hour remaining), we started to take a look at their public repo to see what we can encounter.
The team is key I&amp;rsquo;m super grateful for the opportunity to be part of this team, I&amp;rsquo;m learning a lot from them, and I&amp;rsquo;m sure I will learn a lot more in the future, they are really welcoming for newcomers like me, and don&amp;rsquo;t hesitate to answer any question I might have and share their knowledge with me.</description></item><item><title>Day19 - 1 wei attack</title><link>https://blog.mariodev.xyz/day19/</link><pubDate>Wed, 26 Apr 2023 13:35:47 -0400</pubDate><guid>https://blog.mariodev.xyz/day19/</guid><description>The learning is starting to flourish XD. As I told you in a previous post, I joined a team of people for auditing and I&amp;rsquo;m learning a shit ton of stuff, which of course, will also share with everyone reading this posts of mine hehe.
ELI5 1 wei attack First of all this is also known as inflation attack on EIP-4626.
In simple terms, the inflation attack on EIP-4626 is an exploit where an attacker manipulates the exchange rate between a vault&amp;rsquo;s shares and its underlying assets, causing a victim to lose their deposited assets.</description></item><item><title>Day12 - Weponizing Gas</title><link>https://blog.mariodev.xyz/day12/</link><pubDate>Wed, 19 Apr 2023 12:06:41 -0400</pubDate><guid>https://blog.mariodev.xyz/day12/</guid><description>Today, reading through some past reports on Solodit I found out about this interesting exploit that is known under the name of 1/64 rule.
The EVM limits the total gas forwarded on to 63/64ths of the total gasleft() (and silently reduces it to this value if we try to send more)
Example This is the report from Sherlock that I was reading.
I still don&amp;rsquo;t fully understand how this works though, but I&amp;rsquo;ll try to explain it as best as I can.</description></item><item><title>Day05 - 3 attack vectors</title><link>https://blog.mariodev.xyz/day05/</link><pubDate>Wed, 12 Apr 2023 09:57:24 -0400</pubDate><guid>https://blog.mariodev.xyz/day05/</guid><description>Today I was lucky to get in time to an @opensensepw discord study session where @mis4nthr0pic was going through a couple of attack vectors in the Solidity-Security-Compendium
Signature Malleability This is quite a math heavy thing when you start looking into how it actually works and why, but for the context of an auditor it is enough to know a couple of things.
In Ethereum, the ecrecover function is used to verify signatures.</description></item><item><title>Day03 - Smart Contract Auditing Heuristics</title><link>https://blog.mariodev.xyz/day03/</link><pubDate>Mon, 10 Apr 2023 04:55:09 -0400</pubDate><guid>https://blog.mariodev.xyz/day03/</guid><description>I found this cool repo on Github that has a list of heuristics for auditing smart contracts. I thought it would be a good idea to go through the ones I found interesting.
Code asymmetries In many projects, there should be some symmetries for different functions.
For instance, a withdraw function should (usually) undo all the state changes of a deposit function and a delete function should undo all the state changes of the corresponding add function.</description></item><item><title>Day02 - People don't read standards</title><link>https://blog.mariodev.xyz/day02/</link><pubDate>Sun, 09 Apr 2023 05:49:23 -0400</pubDate><guid>https://blog.mariodev.xyz/day02/</guid><description>Today I went on and after doing some Ethernaut challenges, I decided to try and go through open challenges on Code4rena.
Prepared my environment, opened filter4rena, and started looking for some vulns.
First finding When starting to look at the contracts I quickly found this line of code that caught my attention:
ERC20(token).transfer(msg.sender, amount); Even though this was my first ever real audit, I have been reading a lot of blog posts and common vulnerabilities, so I knew that this line of code was considered a vulnerability because it doesn&amp;rsquo;t check the return value of the transfer function, and some tokens do not revert when the transfer fails but instead return false.</description></item></channel></rss>