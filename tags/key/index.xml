<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>key ðŸ’¡ on Mario S.O</title><link>https://blog.mariodev.xyz/tags/key/</link><description>Recent content in key ðŸ’¡ on Mario S.O</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 13 Apr 2023 12:09:20 -0400</lastBuildDate><atom:link href="https://blog.mariodev.xyz/tags/key/index.xml" rel="self" type="application/rss+xml"/><item><title>Day06 - VIP_Bank</title><link>https://blog.mariodev.xyz/day06/</link><pubDate>Thu, 13 Apr 2023 12:09:20 -0400</pubDate><guid>https://blog.mariodev.xyz/day06/</guid><description>Recently I discovered on Twitter this challenges page from Quill Audits, and I decided to give it a try.
I started with the VIPBank challenge, which is a smart contract that allows you to deposit and withdraw funds from it. The challenge consists on locking the contract, aka DoS attack.
The contract pragma solidity 0.8.7; contract VIP_Bank{ address public manager; mapping(address =&amp;gt; uint) public balances; mapping(address =&amp;gt; bool) public VIP; uint public maxETH = 0.</description></item><item><title>Day04 - Calldata &amp; Foundry</title><link>https://blog.mariodev.xyz/day04/</link><pubDate>Tue, 11 Apr 2023 10:53:41 -0400</pubDate><guid>https://blog.mariodev.xyz/day04/</guid><description>The other day, I stumbled upon a tweet from @DeGatchi promoting his latest blog post about Reversing the EVM: Raw Calldata and I thought it was so helpful that I decided to write a post about it, not only to share it with you (rando reading this) but also to have a reference for myself.
It includes a foundry CLI mini-masterclass (if that&amp;rsquo;s a thing).
Calldata 101 Super brief ELI5 explanation of calldata:</description></item></channel></rss>